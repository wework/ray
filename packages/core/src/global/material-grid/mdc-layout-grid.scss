// Copyright 2017 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

@import '../variables';
@import '../mixins/exports';
@import './mixins';

@include exports('ray-grid') {
  :root {
    @each $size in map-keys($ray-layout-grid-columns) {
      --ray-layout-grid-columns-#{$size}: #{map-get(
          $ray-layout-grid-columns,
          $size
        )};
      --ray-layout-grid-margin-#{$size}: #{map-get(
          $ray-layout-grid-default-margin,
          $size
        )};
      --ray-layout-grid-gutter-#{$size}: #{map-get(
          $ray-layout-grid-default-gutter,
          $size
        )};
      --ray-layout-grid-column-width-#{$size}: #{map-get(
          $ray-layout-grid-column-width,
          $size
        )};
    }
  }

  // postcss-bem-linter: define layout-grid
  .#{$ray-class-prefix}page-container {
    @each $size in map-keys($ray-layout-grid-columns) {
      @include mdc-layout-grid-media-query_($size) {
        $margin: map-get($ray-layout-grid-default-margin, $size);
        $max-width: map-get($ray-layout-grid-max-width, $size);

        @include mdc-layout-grid($size, $margin, $max-width);
      }
    }
  }

  .#{$ray-class-prefix}grid {
    @each $size in map-keys($ray-layout-grid-columns) {
      @include mdc-layout-grid-media-query_($size) {
        $margin: map-get($ray-layout-grid-default-margin, $size);
        $gutter: map-get($ray-layout-grid-default-gutter, $size);

        @include mdc-layout-grid-inner($size, $margin, $gutter);
      }
    }
  }

  .#{$ray-class-prefix}grid__cell {
    // select the upper breakpoint
    $upper-breakpoint: nth(map-keys($ray-layout-grid-columns), 1);

    @each $size in map-keys($ray-layout-grid-columns) {
      @include mdc-layout-grid-media-query_($size) {
        $gutter: map-get($ray-layout-grid-default-gutter, $size);

        @include mdc-layout-grid-cell(
          $size,
          $ray-layout-grid-default-column-span,
          $gutter
        );

        &--span-full {
          $max-columns: map-get($ray-layout-grid-columns, $size);

          @include mdc-layout-grid-cell($size, $max-columns, $gutter);
        }

        @for $span
          from 1
          through map-get($ray-layout-grid-columns, $upper-breakpoint)
        {
          // Span classes.
          // stylelint-disable max-nesting-depth
          @at-root .#{$ray-class-prefix}grid__cell--span-#{$span},
            .#{$ray-class-prefix}grid__cell--span-#{$span}-#{$size} {
            @include mdc-layout-grid-cell-span_($size, $span, $gutter);
          }
          // stylelint-enable max-nesting-depth

          // Push classes.
          // stylelint-disable max-nesting-depth
          @at-root .#{$ray-class-prefix}grid__cell--push-#{$span},
            .#{$ray-class-prefix}grid__cell--push-#{$span}-#{$size} {
            @include mdc-layout-grid-cell-push_($size, $span, $gutter);
          }
          // stylelint-enable max-nesting-depth
        }
      }
    }

    // Order override classes.
    @for $i from 1 through map-get($ray-layout-grid-columns, $upper-breakpoint)
    {
      &--order-#{$i} {
        @include mdc-layout-grid-cell-order($i);
      }
    }

    // Alignment classes.
    &--align-top {
      @include mdc-layout-grid-cell-align(top);
    }

    &--align-middle {
      @include mdc-layout-grid-cell-align(middle);
    }

    &--align-bottom {
      @include mdc-layout-grid-cell-align(bottom);
    }
  }

  .#{$ray-class-prefix}page-container--align-left {
    margin-right: auto;
    margin-left: 0;
  }

  .#{$ray-class-prefix}page-container--align-right {
    margin-right: 0;
    margin-left: auto;
  }

  .#{$ray-class-prefix}page-container--justify-left {
    > .#{$ray-class-prefix}grid {
      justify-content: left;
    }
  }

  .#{$ray-class-prefix}page-container--justify-center {
    > .#{$ray-class-prefix}grid {
      justify-content: center;
    }
  }

  .#{$ray-class-prefix}page-container--justify-right {
    > .#{$ray-class-prefix}grid {
      justify-content: right;
    }
  }
  // postcss-bem-linter: end
}
